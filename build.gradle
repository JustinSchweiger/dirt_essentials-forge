plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'net.dirtcraft.mods'
version = '1.0'

java {
    archivesBaseName = 'dirt_essentials'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    // mappings channel: 'official', version: '1.18.2'
    mappings channel: 'parchment', version: '2022.11.06-1.18.2'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dirt_essentials'

            mods {
                dirt_essentials {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dirt_essentials'
            args '--nogui', 'Xmx4G'

            mods {
                dirt_essentials {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dirt_essentials'

            mods {
                dirt_essentials {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'dirt_essentials', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                dirt_essentials {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    // flatDir {
    //     dir 'libs'
    // }
}

configurations {
    shade
    implementation.extendsFrom shade
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.0'

    compileOnly 'net.luckperms:api:5.4'

    minecraftLibrary 'org.hibernate:hibernate-core:6.1.7.Final'
    shade 'org.hibernate:hibernate-core:6.1.7.Final'

    minecraftLibrary 'com.h2database:h2:2.1.214'
    shade 'com.h2database:h2:2.1.214'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
}

jar {
    classifier 'slim'
    manifest {
        attributes([
                "Specification-Title"     : "Dirt_Essentials",
                "Specification-Vendor"    : "DeJustinHD",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "DeJustinHD",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}

shadowJar {
    archiveClassifier = ''
    configurations = [project.configurations.shade]
    relocate 'org.antlr.v4.runtime', 'net.dirtcraft.mods.libs.org.antlr.v4.runtime'
    relocate 'org.hibernate', 'net.dirtcraft.mods.libs.org.hibernate'
    relocate 'com.h2database', 'net.dirtcraft.mods.libs.com.h2database'
    finalizedBy 'reobfShadowJar'
}

assemble.dependsOn shadowJar

reobf {
    shadowJar {}
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}